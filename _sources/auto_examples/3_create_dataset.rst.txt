
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/3_create_dataset.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_3_create_dataset.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_3_create_dataset.py:


Creating a dataset
===========================

This example shows how to create a dataset for training a deep learning model.


.. GENERATED FROM PYTHON SOURCE LINES 11-14

In this example we will create a dataset that was used in our real-time paper [1]_.

.. [1] Sîmpetru, R.C., März, M., Del Vecchio, A., 2023. Proportional and Simultaneous Real-Time Control of the Full Human Hand From High-Density Electromyography. IEEE TNSRE 31, 3118–3131. https://doi.org/10/gsgk4s

.. GENERATED FROM PYTHON SOURCE LINES 14-75

.. code-block:: Python

    from functools import partial
    from pathlib import Path

    import numpy as np
    from scipy.signal import butter

    from myo_verse.datasets.filters.emg_augmentations import WaveletDecomposition
    from myo_verse.datasets.filters.generic import ApplyFunctionFilter, IndexDataFilter
    from myo_verse.datasets.filters.temporal import SOSFrequencyFilter
    from myo_verse.datasets.supervised import EMGDataset

    dataset = EMGDataset(
        emg_data_path=Path(r"data/emg.pkl").resolve(),
        ground_truth_data_path=Path(r"data/kinematics.pkl").resolve(),
        sampling_frequency=2044.0,
        tasks_to_use=["1", "2"],
        save_path=Path(r"data/dataset.zarr").resolve(),
        emg_filter_pipeline_after_chunking=[
            [
                SOSFrequencyFilter(
                    sos_filter_coefficients=butter(
                        4, [47.5, 52.5], "bandstop", output="sos", fs=2044
                    ),
                    is_output=True,
                    name="Raw No Powerline",
                ),
                SOSFrequencyFilter(
                    sos_filter_coefficients=butter(4, 20, "lowpass", output="sos", fs=2044),
                    is_output=True,
                    name="Raw No Powerline Lowpassed 20 Hz",
                ),
            ]
        ],
        emg_representations_to_filter_after_chunking=["Last"],
        ground_truth_filter_pipeline_before_chunking=[
            [
                ApplyFunctionFilter(function=np.reshape, newshape=(63, -1)),
                IndexDataFilter(indices=(slice(3, 63),)),
            ]
        ],
        ground_truth_representations_to_filter_before_chunking=["Input"],
        ground_truth_filter_pipeline_after_chunking=[
            [
                ApplyFunctionFilter(
                    function=partial(np.mean, axis=-1),
                    is_output=True,
                    name="Mean Kinematics per EMG Chunk",
                ),
            ]
        ],
        ground_truth_representations_to_filter_after_chunking=["Last"],
        testing_split_ratio=0.3,
        validation_split_ratio=0.1,
        augmentation_pipelines=[
            [WaveletDecomposition(nr_of_grids=5, is_output=True, level=2)]
        ],
    )

    dataset.create_dataset()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Filtering and splitting data:   0%|          | 0/2 [00:00<?, ?it/s]    Filtering and splitting data:  50%|█████     | 1/2 [00:02<00:02,  2.14s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:04<00:00,  2.07s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:04<00:00,  2.08s/it]
    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   3%|▎         | 11/317 [00:00<00:02, 104.99it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   9%|▉         | 28/317 [00:00<00:02, 140.72it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  14%|█▎        | 43/317 [00:00<00:01, 143.73it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  19%|█▉        | 60/317 [00:00<00:01, 153.92it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  25%|██▍       | 78/317 [00:00<00:01, 160.34it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  30%|██▉       | 95/317 [00:00<00:01, 163.46it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  35%|███▌      | 112/317 [00:00<00:01, 164.52it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  41%|████      | 129/317 [00:00<00:01, 163.00it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  46%|████▌     | 146/317 [00:00<00:01, 150.65it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  51%|█████     | 162/317 [00:01<00:01, 145.37it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  56%|█████▋    | 179/317 [00:01<00:00, 149.92it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  62%|██████▏   | 196/317 [00:01<00:00, 153.40it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  67%|██████▋   | 213/317 [00:01<00:00, 155.71it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  73%|███████▎  | 230/317 [00:01<00:00, 157.55it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  78%|███████▊  | 246/317 [00:01<00:00, 157.59it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  83%|████████▎ | 262/317 [00:02<00:01, 49.58it/s]     Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  88%|████████▊ | 280/317 [00:02<00:00, 64.21it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  94%|█████████▍| 298/317 [00:02<00:00, 80.00it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]: 100%|█████████▉| 316/317 [00:02<00:00, 95.85it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]: 100%|██████████| 317/317 [00:02<00:00, 114.37it/s]




.. GENERATED FROM PYTHON SOURCE LINES 76-79

Default dataset are also available. Here is an example of how to use the EMBCDataset used in [2]_.

.. [2] Sîmpetru, R.C., Osswald, M., Braun, D.I., Souza de Oliveira, D., Cakici, A.L., Del Vecchio, A., 2022. Accurate continuous prediction of 14 degrees of freedom of the hand from myoelectrical signals through convolutive deep learning, in: Proceedings of the 2022 44th Annual International Conference of the IEEE Engineering in Medicine & Biology Society (EMBC). Presented at the 2022 44th Annual International Conference of the IEEE Engineering in Medicine & Biology Society (EMBC), pp. 702–706. https://doi.org/10/gq2f47

.. GENERATED FROM PYTHON SOURCE LINES 79-89

.. code-block:: Python

    from myo_verse.datasets.defaults import EMBCDataset

    dataset = EMBCDataset(
        emg_data_path=Path(r"data/emg.pkl").resolve(),
        ground_truth_data_path=Path(r"data/kinematics.pkl").resolve(),
        save_path=Path(r"data/dataset.zarr").resolve(),
        tasks_to_use=["1", "2"],
    )

    dataset.create_dataset()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Filtering and splitting data:   0%|          | 0/2 [00:00<?, ?it/s]    Filtering and splitting data:  50%|█████     | 1/2 [00:01<00:01,  1.19s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:02<00:00,  1.14s/it]    Filtering and splitting data: 100%|██████████| 2/2 [00:02<00:00,  1.15s/it]
    Augmenting with [GaussianNoise (GaussianNoise)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:   0%|          | 1/317 [00:01<08:14,  1.57s/it]    Augmenting with [GaussianNoise (GaussianNoise)]:   6%|▋         | 20/317 [00:01<00:18, 16.43it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  13%|█▎        | 40/317 [00:01<00:07, 35.80it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  19%|█▉        | 60/317 [00:01<00:04, 57.07it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  25%|██▌       | 80/317 [00:01<00:03, 78.97it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  32%|███▏      | 100/317 [00:02<00:02, 100.24it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  38%|███▊      | 120/317 [00:02<00:01, 119.70it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  44%|████▍     | 140/317 [00:02<00:01, 136.60it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  50%|█████     | 159/317 [00:02<00:01, 145.85it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  56%|█████▌    | 178/317 [00:02<00:00, 155.22it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  62%|██████▏   | 197/317 [00:02<00:00, 162.37it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  68%|██████▊   | 216/317 [00:02<00:00, 168.18it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  74%|███████▍  | 235/317 [00:02<00:00, 172.72it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  80%|████████  | 254/317 [00:02<00:00, 176.14it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  86%|████████▌ | 273/317 [00:03<00:00, 178.47it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  92%|█████████▏| 292/317 [00:03<00:00, 180.20it/s]    Augmenting with [GaussianNoise (GaussianNoise)]:  98%|█████████▊| 311/317 [00:03<00:00, 181.41it/s]    Augmenting with [GaussianNoise (GaussianNoise)]: 100%|██████████| 317/317 [00:03<00:00, 97.05it/s] 
    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:   6%|▌         | 18/317 [00:00<00:01, 178.27it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  12%|█▏        | 38/317 [00:00<00:01, 188.70it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  18%|█▊        | 58/317 [00:00<00:01, 191.81it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  25%|██▍       | 78/317 [00:00<00:01, 193.22it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  31%|███       | 98/317 [00:00<00:01, 188.21it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  37%|███▋      | 118/317 [00:00<00:01, 190.47it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  44%|████▎     | 138/317 [00:00<00:00, 192.64it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  50%|████▉     | 158/317 [00:00<00:00, 194.22it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  56%|█████▌    | 178/317 [00:00<00:00, 195.41it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  62%|██████▏   | 198/317 [00:01<00:00, 193.63it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  69%|██████▉   | 218/317 [00:01<00:00, 189.72it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  75%|███████▍  | 237/317 [00:01<00:00, 187.52it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  81%|████████  | 256/317 [00:01<00:00, 186.50it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  87%|████████▋ | 275/317 [00:01<00:00, 185.51it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  93%|█████████▎| 294/317 [00:01<00:00, 177.40it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]:  99%|█████████▊| 313/317 [00:01<00:00, 179.39it/s]    Augmenting with [MagnitudeWarping (MagnitudeWarping)]: 100%|██████████| 317/317 [00:01<00:00, 187.05it/s]
    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   0%|          | 0/317 [00:00<?, ?it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   4%|▍         | 12/317 [00:00<00:02, 117.84it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:   8%|▊         | 25/317 [00:00<00:02, 123.50it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  13%|█▎        | 40/317 [00:00<00:02, 135.31it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  18%|█▊        | 56/317 [00:00<00:01, 142.72it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  23%|██▎       | 72/317 [00:00<00:01, 147.19it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  28%|██▊       | 88/317 [00:00<00:01, 149.81it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  32%|███▏      | 103/317 [00:00<00:01, 147.92it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  37%|███▋      | 118/317 [00:00<00:01, 144.65it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  42%|████▏     | 133/317 [00:00<00:01, 142.59it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  47%|████▋     | 148/317 [00:01<00:01, 141.02it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  51%|█████▏    | 163/317 [00:01<00:01, 140.03it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  56%|█████▌    | 178/317 [00:01<00:01, 134.96it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  61%|██████    | 192/317 [00:01<00:00, 134.59it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  65%|██████▍   | 206/317 [00:01<00:00, 135.69it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  69%|██████▉   | 220/317 [00:01<00:00, 136.41it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  74%|███████▍  | 234/317 [00:01<00:00, 137.02it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  78%|███████▊  | 248/317 [00:01<00:00, 137.33it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  83%|████████▎ | 262/317 [00:01<00:00, 137.64it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  87%|████████▋ | 276/317 [00:01<00:00, 137.69it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  91%|█████████▏| 290/317 [00:02<00:00, 138.02it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]:  96%|█████████▌| 304/317 [00:02<00:00, 138.10it/s]    Augmenting with [WaveletDecomposition (WaveletDecomposition)]: 100%|██████████| 317/317 [00:02<00:00, 137.92it/s]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 19.780 seconds)

**Estimated memory usage:**  1360 MB


.. _sphx_glr_download_auto_examples_3_create_dataset.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 3_create_dataset.ipynb <3_create_dataset.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 3_create_dataset.py <3_create_dataset.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 3_create_dataset.zip <3_create_dataset.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
